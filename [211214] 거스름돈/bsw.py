def solution(n, money):
    answer = 0
    money.sort() # 배열의 첫 행부터 오름차순으로 채우기 위함
    dp = [[1] + [0]*n for _ in range(len(money))]
    
    for i in range(len(money)):
        for j in range(1, n+1):
            if i == 0: # 돈의 최소 단위가 1원이 아닐경우
                if j % money[i] == 0:
                    dp[i][j] = 1
                else:
                    dp[i][j] = 0
            else: # 표로 확인해야 함
                dp[i][j] = dp[i-1][j] + dp[i][j-money[i]] 
                
    
    return dp[i][j] % 1000000007
  
  '''
  정확성  테스트
테스트 1 〉	통과 (13.35ms, 10.8MB)
테스트 2 〉	통과 (7.47ms, 10.4MB)
테스트 3 〉	통과 (4.82ms, 10.4MB)
테스트 4 〉	통과 (6.54ms, 10.5MB)
테스트 5 〉	통과 (5.48ms, 10.4MB)
테스트 6 〉	통과 (3.09ms, 10.5MB)
테스트 7 〉	통과 (9.74ms, 10.6MB)
테스트 8 〉	통과 (12.51ms, 10.6MB)
테스트 9 〉	통과 (11.71ms, 10.7MB)
테스트 10 〉	통과 (3.19ms, 10.4MB)
테스트 11 〉	통과 (10.67ms, 10.6MB)
테스트 12 〉	통과 (8.41ms, 10.4MB)
테스트 13 〉	통과 (3.23ms, 10.4MB)
테스트 14 〉	통과 (12.52ms, 10.6MB)
효율성  테스트
테스트 1 〉	통과 (915.64ms, 73.8MB)
테스트 2 〉	통과 (1288.53ms, 184MB)
테스트 3 〉	통과 (900.03ms, 96.7MB)
테스트 4 〉	통과 (927.00ms, 88.9MB)
테스트 5 〉	통과 (1707.45ms, 269MB)
테스트 6 〉	통과 (1172.81ms, 142MB)
'''
